#!/usr/bin/env bash

# This will attempt to set up the environment and install ZoneMinder Machine Learning library using git

GIT=${GIT:-$(which git)}
PIP=${PIP:-pip3}
PYTHON=${PYTHON:-python3}
INSTALLER=${INSTALLER:-$(get_installer)}

get_distro() {
    local DISTRO=''
    DISTRO=$( (lsb_release -ds || cat /etc/*release || uname -om ) 2>/dev/null | head -n1)
    local DISTRO_NORM='ubuntu'
    if echo "${DISTRO}" | grep -iqF 'ubuntu'; then
        DISTRO_NORM='debian'
    elif echo "${DISTRO}" | grep -iqF 'centos'; then
        DISTRO_NORM='centos'
    elif echo "${DISTRO}" | grep -iqF 'debian'; then
        DISTRO_NORM='debian'
    elif echo "${DISTRO}" | grep -iqF 'raspbian'; then
        DISTRO_NORM='debian'
    elif echo "${DISTRO}" | grep -iqF 'fedora'; then
        DISTRO_NORM='fedora'
    elif echo "${DISTRO}" | grep -iqF 'opensuse'; then
        DISTRO_NORM='opensuse'
    elif echo "${DISTRO}" | grep -iqF 'arch'; then
        DISTRO_NORM='arch'
    elif echo "${DISTRO}" | grep -iqF 'alpine'; then
        DISTRO_NORM='alpine'
    fi
    echo ${DISTRO_NORM}
}

get_installer() {
    local DISTRO=''
    DISTRO=$(get_distro)
    local installer='apt-get install -qqy'
    case $DISTRO in
        debian)
            installer='apt-get install -qqy'
            ;;
        centos)
            installer='yum install -y'
            ;;
        arch)
            installer='pacman -S --noconfirm'
            ;;
        fedora)
            installer='dnf install -y'
            ;;
        alpine)
            installer='apk add --quiet'
            ;;
        opensuse)
            installer='zypper install -y'
            ;;
    esac
    echo "${installer}"
}

echo
    echo "Checking for git binary...."
    if [ -z "$GIT" ]; then
        print_error "git not found, installing git..."
        "sudo -H ${INSTALLER} git"
    fi
    echo "Checking for pip3 binary...."
    if [ -z "$PIP" ]; then
        print_error "pip3 not found, installing pip3..."
        "sudo -H ${INSTALLER} python3-pip"
    fi
    echo "Checking for python3 binary...."
    if [ -z "$PYTHON" ]; then
        print_error "python3 not found, installing python3..."
        "sudo -H ${INSTALLER} python3"
    fi
    deps=('requests' 'psutil')
    for dep in "${deps[@]}"; do
        echo "Checking for ${dep} python3 module...."
        if ! python3 -c "import ${dep}" 2>/dev/null; then
            print_error "${dep} python3 module not found, installing ${dep} python3 module..."
            "sudo -H ${PIP} install ${dep}"
        fi
    done
    echo
    echo "Cloning baudneo's ZM_ML library..."
    "${GIT} clone https://github.com/baudneo/ZM_ML"
    cd zm_ml || exit 1
    echo "Installing ZM_ML using ${PWD}/examples/install.py..."
    "${PYTHON3}" examples/install.py # >/dev/null 2>&1
